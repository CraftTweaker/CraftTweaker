apply plugin: 'base' // To add "clean" task to the root project.
apply from: 'configuration.gradle'
apply plugin: "maven"

subprojects {
    apply from: rootProject.file('common.gradle')
}
repositories {
    mavenLocal()
    mavenCentral()
}
configurations {
    deployerJars
}
dependencies {
    deployerJars 'org.apache.maven.wagon:wagon-ftp:2.2'
}

uploadArchives {
    repositories {
        mavenDeployer {
            repository(url: "file://" + System.getenv("local_maven"))
            pom {
                groupId = project.group
                version
                artifactId = project.archivesBaseName
                project {
                    name project.archivesBaseName
                    packaging 'jar'
                    description 'CraftTweaker'
                    url 'https://github.com/jaredlll08/CraftTweaker'
                    scm {
                        url 'https://github.com/jaredlll08/CraftTweaker.git'
                        connection 'scm:git:git@github.com:jaredlll08/CraftTweaker.git'
                        developerConnection 'scm:git:git@github.com:jaredlll08/CraftTweaker.git'
                    }
                    issueManagement {
                        system 'github'
                        url 'https://github.com/jaredlll08/CraftTweaker/issues'
                    }
                    developers {
                        developer {
                            id 'Jared'
                            name 'Jared'
                            roles { role 'developer' }
                        }
                    }
                }
            }
        }
    }
}

task wrapper(type: Wrapper, description: 'Creates and deploys the Gradle wrapper to the current directory.') {
    gradleVersion = '2.6'
}

subprojects.each { subproject -> evaluationDependsOn(subproject.path) }

task setupDecompWorkspaceAll(dependsOn: projects1120.collect { ':' + it + ':setupDecompWorkspace' }) {}

task setupCIWorkspaceAll(dependsOn: projects1120.collect { ':' + it + ':setupCIWorkspace' }) {}

task assembleMC1120(type: Jar, dependsOn: [\
		':ZenScript:build',
                                           ':CraftTweaker2-API:build']
        + projects1120.collect { ':' + it + ":build" }) {
    archiveName = "CraftTweaker2-1.12-${craftTweakerVersion}.jar"

    from zipTree(project(":ZenScript").jar.archivePath)
    from zipTree(project(':CraftTweaker2-API').jar.archivePath)
    manifest {
        attributes 'FMLAT': 'crafttweaker_at.cfg'
    }
    for (p in projects1120) {
        from zipTree(project(p).jar.archivePath)
    }
}

task assembleDevBase1120(type: Jar, dependsOn: [
        ':ZenScript:build',
        ':CraftTweaker2-API:build',
        ':CraftTweaker2-MC1120-Main:build']) {
    archiveName = "CraftTweaker2-Dev-1.12-${craftTweakerVersion}.jar"
    manifest {
        attributes 'FMLAT': 'crafttweaker_at.cfg'
    }
    from project(':ZenScript').sourceSets.main.output
    from project(':CraftTweaker2-API').sourceSets.main.output
    from project(':CraftTweaker2-MC1120-Main').sourceSets.main.output
}

task assembleDevFull1120(type: Jar, dependsOn: [
        ':ZenScript:build',
        ':CraftTweaker2-API:build']
        + projects1120.collect { ':' + it + ":build" }) {
    archiveName = "CraftTweaker2-Dev-Full-1.12-${craftTweakerVersion}.jar"

    from project(':ZenScript').sourceSets.main.output
    from project(':CraftTweaker2-API').sourceSets.main.output
    manifest {
        attributes 'FMLAT': 'crafttweaker_at.cfg'
    }
    for (p in projects1120) {
        from project(p).sourceSets.main.output
    }
}


task assembleAll(dependsOn: [
        assembleMC1120,
        assembleDevBase1120,
        assembleDevFull1120

]) {
}

configurations {
    deployerJars
}

def CrtBuildGroup = "CraftTweaker Build"
def CrtSetupGroup = "CraftTweaker Setup"
setupDecompWorkspaceAll.group = CrtSetupGroup
setupCIWorkspaceAll.group = CrtSetupGroup

assembleAll.group = CrtBuildGroup

assembleMC1120.group = CrtBuildGroup
assembleDevBase1120.group = CrtBuildGroup
assembleDevFull1120.group = CrtBuildGroup



